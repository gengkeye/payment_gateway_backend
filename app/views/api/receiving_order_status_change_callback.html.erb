<div class='pure-u-1-1'>
  <p>Whenever an order status changes, Mycelium Gear issues a GET http request to the url specified in the gateway&#39;s callback field (if you filled it) or in the order&#39;s <code>callback_url</code> param. This way it lets your site know that the payment was either successful or has failed for some reason. This http request is also sometimes called a webhook, although we prefer not to use that term.</p>

  <p>Important information is passed in this http request as url params. Here&#39;s what a typical callback may look like:</p>
  <div class="highlight"><pre>GET https://worldsbestshoes.com/payments/callback?order_id=1&amp;amount=1&amp;amount_in_btc=0.00000001&amp;amount_paid_in_btc=0.00000001&amp;status=2&amp;address=1NZov2nm6gRCGW6r4q1qHtxXurrWNpPr1q&amp;transaction_ids=[&quot;tid1&quot;]&amp;keychain_id=1&amp;last_keychain_id=1&amp;after_payment_redirect_to=http://example.com/payments/success&amp;auto_redirect=true&amp;callback_data=some+random+data
  </pre></div>
  <p>Also, request will have special header:</p>
  <div class="highlight"><pre>X-Signature: UeXPK9RlYFFLdYpWeGBpSd4OWslJR076VBQU4prJlzMpe3f2KL4eUVfpiZ+Z9/c71tqYZgYWeIN78NE1/Snmyw==
  </pre></div>
  <p>The following list explains in detail the information and parameters in the GET callback request:</p>

  <ul>
    <li> order_id<br>
      An internal id of the order. This is how you can find the corresponding purchase record in your database. It is also used for the signature.</li>
      <li>amount<br>
        This is the amount in the gateway&#39;s currency that was supposed to be paid</li>
        <li>amount_in_btc<br>
          This is the amount in btc that was supposed to be paid</li>
          <li>amount_paid_in_btc<br>
            This is the amount in btc that has been paid</li>
            <li>status<br>
              Returns a numerical value which can be either of the following:

              <ul>
                <li> 1 — unconfirmed; transaction was received, but does not have enough confirmations yet</li>
                <li> 2 — paid in full</li>
                <li> 3 — underpaid; not enough money received</li>
                <li> 4 — overpaid; too much has been received</li>
                <li> 5 — expired; customer did not pay in time</li>
                <li> 6 — canceled; customer has canceled the order</li>
              </ul></li>
              <li>address<br>
                The Bitcoin address to which a transaction was supposed to be made</li>
                <li>transaction_ids
                  If the status is 1,2,3 or 4, this will contain JSON array with the Bitcoin transaction IDs</li>
                  <li>callback_data<br>
                    This contains any additional data that was sent along with the transaction while creating the order. For example, if you sent &quot;hello world&quot; as data in the request that created that order, you will also get the same string back with a callback — as the value for the callback_data key within the returned json.</li>
                    <li>X-Signature header<br>
                      This is the most important piece of information in regards to security. Keep in mind that anyone can make a request to that callback url of yours and basically fool your website into believing that a certain order was paid. To avoid that, Mycelium Gear uses signatures to sign a callback request, so that you can verify it came from Mycelium Gear and not somebody else. This is explained in detail below.</li>
                    </ul>

                    <h2>Callback signature</h2>

                    <p>It&#39;s generated in the same way as a signature for signed API requests, except that it uses blank Nonce and Body.</p>
                    <div class="highlight"><pre><span class="vg">Base64StrictEncode</span><span class="p">(</span>
                      <span class="w">  </span><span class="vg">HMAC</span><span class="o">-</span><span class="vg">SHA512</span><span class="p">(</span>
                      <span class="w">    </span><span class="vg">REQUEST_METHOD</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="vg">REQUEST_URI</span><span class="p">,</span>
                      <span class="w">    </span><span class="vg">GATEWAY_SECRET</span>
                      <span class="w">  </span><span class="p">)</span>
                      <span class="p">)</span>
                    </pre></div>
                    <p>In Ruby, callback signature can be verified using <code>straight-server-kit</code> gem.</p>
                    <div class="highlight"><pre>  <span class="n">request_uri</span> <span class="o">=</span> <span class="no">URI</span><span class="p">(</span><span class="n">env</span><span class="o">[</span><span class="s1">&#39;REQUEST_URI&#39;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">request_uri</span> <span class="k">rescue</span> <span class="n">env</span><span class="o">[</span><span class="s1">&#39;REQUEST_URI&#39;</span><span class="o">]</span>
                      <span class="k">if</span> <span class="no">StraightServerKit</span><span class="o">.</span><span class="n">valid_callback?</span><span class="p">(</span><span class="ss">signature</span><span class="p">:</span>   <span class="n">headers</span><span class="o">[</span><span class="s1">&#39;X-Signature&#39;</span><span class="o">]</span><span class="p">,</span>
                      <span class="ss">request_uri</span><span class="p">:</span> <span class="n">request_uri</span><span class="p">,</span>
                      <span class="ss">secret</span><span class="p">:</span>      <span class="n">gateway_secret</span><span class="p">)</span>
                      <span class="c1"># update order</span>
                      <span class="k">else</span>
                      <span class="c1"># log incident and return 200</span>
                      <span class="k">end</span>
                    </pre></div><div class="highlight"><pre><span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
                    <span class="ss">signature</span><span class="p">:</span> <span class="s1">&#39;UeXPK9RlYFFLdYpWeGBpSd4OWslJR076VBQU4prJlzMpe3f2KL4eUVfpiZ+Z9/c71tqYZgYWeIN78NE1/Snmyw==&#39;</span><span class="p">,</span>
                    <span class="ss">request_uri</span><span class="p">:</span> <span class="s1">&#39;/payments/callback?order_id=1&amp;amount=1&amp;amount_in_btc=0.00000001&amp;amount_paid_in_btc=0.00000001&amp;status=2&amp;address=1NZov2nm6gRCGW6r4q1qHtxXurrWNpPr1q&amp;transaction_ids=[&quot;tid1&quot;]&amp;keychain_id=1&amp;last_keychain_id=1&amp;after_payment_redirect_to=http://example.com/payments/success&amp;auto_redirect=true&amp;callback_data=some+random+data&#39;</span><span class="p">,</span>
                    <span class="ss">secret</span><span class="p">:</span> <span class="s1">&#39;gateway.secret&#39;</span><span class="p">,</span>
                    <span class="p">}</span>
                    <span class="no">StraightServerKit</span><span class="o">.</span><span class="n">valid_callback?</span><span class="p">(</span><span class="o">**</span><span class="n">data</span><span class="p">)</span> <span class="o">==</span> <span class="kp">true</span>
                  </pre></div>
                  <p>Details of signature verification.</p>
                  <div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;openssl&#39;</span>
                    <span class="nb">require</span> <span class="s1">&#39;base64&#39;</span>

                    <span class="n">sha512</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">Digest</span><span class="o">::</span><span class="no">SHA512</span><span class="o">.</span><span class="n">new</span>
                    <span class="n">nonce</span> <span class="o">=</span> <span class="kp">nil</span>
                    <span class="n">body</span> <span class="o">=</span> <span class="kp">nil</span>
                    <span class="nb">method</span> <span class="o">=</span> <span class="s1">&#39;GET&#39;</span>
                    <span class="n">request_uri</span> <span class="o">=</span> <span class="s1">&#39;/payments/callback?order_id=1&amp;amount=1&amp;amount_in_btc=0.00000001&amp;amount_paid_in_btc=0.00000001&amp;status=2&amp;address=1NZov2nm6gRCGW6r4q1qHtxXurrWNpPr1q&amp;transaction_ids=[&quot;tid1&quot;]&amp;keychain_id=1&amp;last_keychain_id=1&amp;after_payment_redirect_to=http://example.com/payments/success&amp;auto_redirect=true&amp;callback_data=some+random+data&#39;</span>
                    <span class="n">secret</span> <span class="o">=</span> <span class="s1">&#39;gateway.secret&#39;</span>
                    <span class="n">constant_digest</span> <span class="o">=</span> <span class="n">sha512</span><span class="o">.</span><span class="n">digest</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">nonce</span><span class="si">}#{</span><span class="n">body</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
                    <span class="n">constant_digest</span> <span class="o">==</span> <span class="n">sha512</span><span class="o">.</span><span class="n">digest</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
                    <span class="n">constant_digest</span><span class="o">.</span><span class="n">bytes</span> <span class="o">==</span> <span class="o">[</span><span class="mi">207</span><span class="p">,</span> <span class="mi">131</span><span class="p">,</span> <span class="mi">225</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">126</span><span class="p">,</span> <span class="mi">239</span><span class="p">,</span> <span class="mi">184</span><span class="p">,</span> <span class="mi">189</span><span class="p">,</span> <span class="mi">241</span><span class="p">,</span> <span class="mi">84</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">214</span><span class="p">,</span> <span class="mi">109</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">214</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">228</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">87</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">220</span><span class="p">,</span> <span class="mi">131</span><span class="p">,</span> <span class="mi">244</span><span class="p">,</span> <span class="mi">169</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">211</span><span class="p">,</span> <span class="mi">108</span><span class="p">,</span> <span class="mi">233</span><span class="p">,</span> <span class="mi">206</span><span class="p">,</span> <span class="mi">71</span><span class="p">,</span> <span class="mi">208</span><span class="p">,</span> <span class="mi">209</span><span class="p">,</span> <span class="mi">60</span><span class="p">,</span> <span class="mi">93</span><span class="p">,</span> <span class="mi">133</span><span class="p">,</span> <span class="mi">242</span><span class="p">,</span> <span class="mi">176</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">131</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">210</span><span class="p">,</span> <span class="mi">135</span><span class="p">,</span> <span class="mi">126</span><span class="p">,</span> <span class="mi">236</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">99</span><span class="p">,</span> <span class="mi">185</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">189</span><span class="p">,</span> <span class="mi">71</span><span class="p">,</span> <span class="mi">65</span><span class="p">,</span> <span class="mi">122</span><span class="p">,</span> <span class="mi">129</span><span class="p">,</span> <span class="mi">165</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">122</span><span class="p">,</span> <span class="mi">249</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">218</span><span class="p">,</span> <span class="mi">62</span><span class="o">]</span>
                    <span class="n">request</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">method</span><span class="si">}#{</span><span class="n">request_uri</span><span class="si">}#{</span><span class="n">constant_digest</span><span class="si">}</span><span class="s2">&quot;</span>
                    <span class="n">raw_signature</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">HMAC</span><span class="o">.</span><span class="n">digest</span><span class="p">(</span><span class="n">sha512</span><span class="p">,</span> <span class="n">secret</span><span class="p">,</span> <span class="n">request</span><span class="p">)</span>
                    <span class="n">raw_signature</span><span class="o">.</span><span class="n">bytes</span> <span class="o">==</span> <span class="o">[</span><span class="mi">81</span><span class="p">,</span> <span class="mi">229</span><span class="p">,</span> <span class="mi">207</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">212</span><span class="p">,</span> <span class="mi">101</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">81</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">117</span><span class="p">,</span> <span class="mi">138</span><span class="p">,</span> <span class="mi">86</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">105</span><span class="p">,</span> <span class="mi">73</span><span class="p">,</span> <span class="mi">222</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">201</span><span class="p">,</span> <span class="mi">73</span><span class="p">,</span> <span class="mi">71</span><span class="p">,</span> <span class="mi">78</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="mi">84</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">226</span><span class="p">,</span> <span class="mi">154</span><span class="p">,</span> <span class="mi">201</span><span class="p">,</span> <span class="mi">151</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">123</span><span class="p">,</span> <span class="mi">119</span><span class="p">,</span> <span class="mi">246</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">190</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">81</span><span class="p">,</span> <span class="mi">87</span><span class="p">,</span> <span class="mi">233</span><span class="p">,</span> <span class="mi">137</span><span class="p">,</span> <span class="mi">159</span><span class="p">,</span> <span class="mi">153</span><span class="p">,</span> <span class="mi">247</span><span class="p">,</span> <span class="mi">247</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">214</span><span class="p">,</span> <span class="mi">218</span><span class="p">,</span> <span class="mi">152</span><span class="p">,</span> <span class="mi">102</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">131</span><span class="p">,</span> <span class="mi">123</span><span class="p">,</span> <span class="mi">240</span><span class="p">,</span> <span class="mi">209</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">253</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">230</span><span class="p">,</span> <span class="mi">203</span><span class="o">]</span>
                    <span class="n">signature</span> <span class="o">=</span> <span class="no">Base64</span><span class="o">.</span><span class="n">strict_encode64</span><span class="p">(</span><span class="n">raw_signature</span><span class="p">)</span>
                    <span class="n">signature</span> <span class="o">==</span> <span class="s1">&#39;UeXPK9RlYFFLdYpWeGBpSd4OWslJR076VBQU4prJlzMpe3f2KL4eUVfpiZ+Z9/c71tqYZgYWeIN78NE1/Snmyw==&#39;</span>
                  </pre></div>
                  <p>JavaScript version using <a href="https://github.com/Caligatio/jsSHA">jsSHA</a>.</p>
                  <div class="highlight"><pre><span class="kd">var</span> <span class="nx">nonce</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
                    <span class="kd">var</span> <span class="nx">body</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
                    <span class="kd">var</span> <span class="nx">method</span> <span class="o">=</span> <span class="s1">&#39;GET&#39;</span><span class="p">;</span>
                    <span class="kd">var</span> <span class="nx">request_uri</span> <span class="o">=</span> <span class="s1">&#39;/payments/callback?order_id=1&amp;amount=1&amp;amount_in_btc=0.00000001&amp;amount_paid_in_btc=0.00000001&amp;status=2&amp;address=1NZov2nm6gRCGW6r4q1qHtxXurrWNpPr1q&amp;transaction_ids=[&quot;tid1&quot;]&amp;keychain_id=1&amp;last_keychain_id=1&amp;after_payment_redirect_to=http://example.com/payments/success&amp;auto_redirect=true&amp;callback_data=some+random+data&#39;</span><span class="p">;</span>
                    <span class="kd">var</span> <span class="nx">secret</span> <span class="o">=</span> <span class="s1">&#39;gateway.secret&#39;</span><span class="p">;</span>
                    <span class="kd">var</span> <span class="nx">sha512</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">jsSHA</span><span class="p">(</span><span class="s2">&quot;SHA-512&quot;</span><span class="p">,</span> <span class="s2">&quot;TEXT&quot;</span><span class="p">);</span>
                    <span class="nx">sha512</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">nonce</span> <span class="o">+</span> <span class="nx">body</span><span class="p">);</span>
                    <span class="kd">var</span> <span class="nx">constant_digest</span> <span class="o">=</span> <span class="nx">sha512</span><span class="p">.</span><span class="nx">getHash</span><span class="p">(</span><span class="s2">&quot;ARRAYBUFFER&quot;</span><span class="p">);</span>
                    <span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">method</span> <span class="o">+</span> <span class="nx">request_uri</span><span class="p">;</span>
                    <span class="kd">var</span> <span class="nx">sha512</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">jsSHA</span><span class="p">(</span><span class="s2">&quot;SHA-512&quot;</span><span class="p">,</span> <span class="s2">&quot;ARRAYBUFFER&quot;</span><span class="p">);</span>
                    <span class="nx">sha512</span><span class="p">.</span><span class="nx">setHMACKey</span><span class="p">(</span><span class="nx">secret</span><span class="p">,</span> <span class="s2">&quot;TEXT&quot;</span><span class="p">);</span>
                    <span class="nx">sha512</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="k">new</span> <span class="nx">TextEncoder</span><span class="p">(</span><span class="s2">&quot;UTF-8&quot;</span><span class="p">).</span><span class="nx">encode</span><span class="p">(</span><span class="nx">request</span><span class="p">));</span>
                    <span class="nx">sha512</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">constant_digest</span><span class="p">);</span>
                    <span class="kd">var</span> <span class="nx">signature</span> <span class="o">=</span> <span class="nx">sha512</span><span class="p">.</span><span class="nx">getHMAC</span><span class="p">(</span><span class="s2">&quot;B64&quot;</span><span class="p">);</span>
                    <span class="nx">alert</span><span class="p">(</span><span class="nx">signature</span><span class="p">);</span>
                  </pre></div>
                </div>